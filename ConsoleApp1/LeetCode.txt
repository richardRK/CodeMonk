 public static int[] TwoSum(int[] nums, int target)
    {

        Dictionary<int, int> map = new Dictionary<int, int>();
        for (int i = 0; i < nums.Length; i++)
        {
            int complement = target - nums[i];
            if (map.ContainsKey(complement))
            {
                return new int[] { map.GetValueOrDefault(complement), i };
            }
            map.Add(nums[i], i);
        }


        throw new Exception();
    }
	
	
	
	  private static int[] RunningSum1DArray(int[] input)
    {
        int N = input.Length;
        List<int> lst = new List<int>();
        int calcSum = 0;
        for (int i = 0; i < N; i++)
        {
         
                for (int k = i; k >= 0; k--)
                {
                    calcSum += input[k];
                }

                lst.Add(calcSum);
                calcSum = 0;
            
        }
        return lst.ToArray();
    }
	
	
	
	
	