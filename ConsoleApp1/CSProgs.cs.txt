using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
public class Program
{

    public static void MonkandRotation()
    {
        long T = Convert.ToInt64(Console.ReadLine());

        while (T-- > 0)
        {
            string NandK = Console.ReadLine();
            long N = Convert.ToInt64(NandK.Split()[0]);
            long K = Convert.ToInt64(NandK.Split()[1]);
            long[] items = new long[N];
            items = Console.ReadLine().Split().Select(Int64.Parse).ToArray();

            long[] result = shiftRight(items, K);

            Console.WriteLine(string.Join(" ", result));
        }
        Console.ReadLine();
    }


    public static long[] shiftRight(long[] arr, long K)
    {
        long[] demo = new long[arr.Length];
        for (long i = 0; i < arr.Length; i++)
        {
            demo[(i + K) % demo.Length] = arr[i];
        }
        return demo;
    }


    public static void MonkandInversions()
    {
        long T = Convert.ToInt64(Console.ReadLine());
        long i, j;
        long count = 0;
        string[] arr = null;

        while (T-- > 0)
        {
            long N = Convert.ToInt64(Console.ReadLine());

            long[,] arr1 = new long[N, N];

            for (i = 0; i < N; i++)
            {
                arr = (Console.ReadLine().Split(' '));

                for (j = 0; j < N; j++)
                {
                    arr1[i, j] = long.Parse(arr[j]);

                }
            }

            for (i = 0; i < N; i++)
            {
                for (j = 0; j < N; j++)
                {
                    for (long x = i; x < N; ++x)
                    {
                        for (long y = j; y < N; ++y)
                        {
                            if (arr1[x, y] < arr1[i, j])

                                count++;
                        }

                    }
                }
            }

            Console.WriteLine(count);


        }


        Console.ReadLine();



    }


}













